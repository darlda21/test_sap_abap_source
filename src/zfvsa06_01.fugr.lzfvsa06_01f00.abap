*---------------------------------------------------------------------*
*    view related FORM routines
*---------------------------------------------------------------------*
*...processing: ZVSA0604........................................*
FORM GET_DATA_ZVSA0604.
  PERFORM VIM_FILL_WHERETAB.
*.read data from database.............................................*
  REFRESH TOTAL.
  CLEAR   TOTAL.
  SELECT * FROM ZTSA0602 WHERE
(VIM_WHERETAB) .
    CLEAR ZVSA0604 .
ZVSA0604-MANDT =
ZTSA0602-MANDT .
ZVSA0604-DPID =
ZTSA0602-DPID .
ZVSA0604-DPCALL =
ZTSA0602-DPCALL .
    SELECT SINGLE * FROM ZTSA0602_T WHERE
DPID = ZTSA0602-DPID AND
SPRAS = SY-LANGU .
    IF SY-SUBRC EQ 0.
ZVSA0604-DPNAME =
ZTSA0602_T-DPNAME .
    ENDIF.
<VIM_TOTAL_STRUC> = ZVSA0604.
    APPEND TOTAL.
  ENDSELECT.
  SORT TOTAL BY <VIM_XTOTAL_KEY>.
  <STATUS>-ALR_SORTED = 'R'.
*.check dynamic selectoptions (not in DDIC)...........................*
  IF X_HEADER-SELECTION NE SPACE.
    PERFORM CHECK_DYNAMIC_SELECT_OPTIONS.
  ELSEIF X_HEADER-DELMDTFLAG NE SPACE.
    PERFORM BUILD_MAINKEY_TAB.
  ENDIF.
  REFRESH EXTRACT.
ENDFORM.
*---------------------------------------------------------------------*
FORM DB_UPD_ZVSA0604 .
*.process data base updates/inserts/deletes.........................*
LOOP AT TOTAL.
  CHECK <ACTION> NE ORIGINAL.
MOVE <VIM_TOTAL_STRUC> TO ZVSA0604.
  IF <ACTION> = UPDATE_GELOESCHT.
    <ACTION> = GELOESCHT.
  ENDIF.
  CASE <ACTION>.
   WHEN NEUER_GELOESCHT.
IF STATUS_ZVSA0604-ST_DELETE EQ GELOESCHT.
     READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
     IF SY-SUBRC EQ 0.
       DELETE EXTRACT INDEX SY-TABIX.
     ENDIF.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN GELOESCHT.
  SELECT SINGLE FOR UPDATE * FROM ZTSA0602 WHERE
  DPID = ZVSA0604-DPID .
    IF SY-SUBRC = 0.
    DELETE ZTSA0602 .
    ENDIF.
    DELETE FROM ZTSA0602_T WHERE
    DPID = ZTSA0602-DPID .
    IF STATUS-DELETE EQ GELOESCHT.
      READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY> BINARY SEARCH.
      DELETE EXTRACT INDEX SY-TABIX.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN OTHERS.
  SELECT SINGLE FOR UPDATE * FROM ZTSA0602 WHERE
  DPID = ZVSA0604-DPID .
    IF SY-SUBRC <> 0.   "insert preprocessing: init WA
      CLEAR ZTSA0602.
    ENDIF.
ZTSA0602-MANDT =
ZVSA0604-MANDT .
ZTSA0602-DPID =
ZVSA0604-DPID .
ZTSA0602-DPCALL =
ZVSA0604-DPCALL .
    IF SY-SUBRC = 0.
    UPDATE ZTSA0602 ##WARN_OK.
    ELSE.
    INSERT ZTSA0602 .
    ENDIF.
    SELECT SINGLE FOR UPDATE * FROM ZTSA0602_T WHERE
    DPID = ZTSA0602-DPID AND
    SPRAS = SY-LANGU .
      IF SY-SUBRC <> 0.   "insert preprocessing: init WA
        CLEAR ZTSA0602_T.
ZTSA0602_T-DPID =
ZTSA0602-DPID .
ZTSA0602_T-SPRAS =
SY-LANGU .
      ENDIF.
ZTSA0602_T-DPNAME =
ZVSA0604-DPNAME .
    IF SY-SUBRC = 0.
    UPDATE ZTSA0602_T ##WARN_OK.
    ELSE.
    INSERT ZTSA0602_T .
    ENDIF.
    READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
    IF SY-SUBRC EQ 0.
      <XACT> = ORIGINAL.
      MODIFY EXTRACT INDEX SY-TABIX.
    ENDIF.
    <ACTION> = ORIGINAL.
    MODIFY TOTAL.
  ENDCASE.
ENDLOOP.
CLEAR: STATUS_ZVSA0604-UPD_FLAG,
STATUS_ZVSA0604-UPD_CHECKD.
MESSAGE S018(SV).
ENDFORM.
*---------------------------------------------------------------------*
FORM READ_SINGLE_ENTRY_ZVSA0604.
  SELECT SINGLE * FROM ZTSA0602 WHERE
DPID = ZVSA0604-DPID .
ZVSA0604-MANDT =
ZTSA0602-MANDT .
ZVSA0604-DPID =
ZTSA0602-DPID .
ZVSA0604-DPCALL =
ZTSA0602-DPCALL .
    SELECT SINGLE * FROM ZTSA0602_T WHERE
DPID = ZTSA0602-DPID AND
SPRAS = SY-LANGU .
    IF SY-SUBRC EQ 0.
ZVSA0604-DPNAME =
ZTSA0602_T-DPNAME .
    ELSE.
      CLEAR SY-SUBRC.
      CLEAR ZVSA0604-DPNAME .
    ENDIF.
ENDFORM.
*---------------------------------------------------------------------*
FORM CORR_MAINT_ZVSA0604 USING VALUE(CM_ACTION) RC.
  DATA: RETCODE LIKE SY-SUBRC, COUNT TYPE I, TRSP_KEYLEN TYPE SYFLENG.
  FIELD-SYMBOLS: <TAB_KEY_X> TYPE X.
  CLEAR RC.
MOVE ZVSA0604-DPID TO
ZTSA0602-DPID .
MOVE ZVSA0604-MANDT TO
ZTSA0602-MANDT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = 'ZTSA0602'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN ZTSA0602 TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING 'ZTSA0602'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

MOVE ZTSA0602-DPID TO
ZTSA0602_T-DPID .
MOVE SY-LANGU TO
ZTSA0602_T-SPRAS .
MOVE ZVSA0604-MANDT TO
ZTSA0602_T-MANDT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = 'ZTSA0602_T'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN ZTSA0602_T TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING 'ZTSA0602_T'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

ENDFORM.
*---------------------------------------------------------------------*
*...processing: ZVSA06PRO.......................................*
FORM GET_DATA_ZVSA06PRO.
  PERFORM VIM_FILL_WHERETAB.
*.read data from database.............................................*
  REFRESH TOTAL.
  CLEAR   TOTAL.
  SELECT * FROM ZTSA06PRO WHERE
(VIM_WHERETAB) .
    CLEAR ZVSA06PRO .
ZVSA06PRO-MANDT =
ZTSA06PRO-MANDT .
ZVSA06PRO-PCODE =
ZTSA06PRO-PCODE .
ZVSA06PRO-PTYPE =
ZTSA06PRO-PTYPE .
ZVSA06PRO-PPRICE =
ZTSA06PRO-PPRICE .
ZVSA06PRO-WAERS =
ZTSA06PRO-WAERS .
ZVSA06PRO-PERNR =
ZTSA06PRO-PERNR .
    SELECT SINGLE * FROM ZTSA06PRO_T WHERE
PCODE = ZTSA06PRO-PCODE AND
SPRAS = SY-LANGU .
    IF SY-SUBRC EQ 0.
ZVSA06PRO-PNAME =
ZTSA06PRO_T-PNAME .
    ENDIF.
<VIM_TOTAL_STRUC> = ZVSA06PRO.
    APPEND TOTAL.
  ENDSELECT.
  SORT TOTAL BY <VIM_XTOTAL_KEY>.
  <STATUS>-ALR_SORTED = 'R'.
*.check dynamic selectoptions (not in DDIC)...........................*
  IF X_HEADER-SELECTION NE SPACE.
    PERFORM CHECK_DYNAMIC_SELECT_OPTIONS.
  ELSEIF X_HEADER-DELMDTFLAG NE SPACE.
    PERFORM BUILD_MAINKEY_TAB.
  ENDIF.
  REFRESH EXTRACT.
ENDFORM.
*---------------------------------------------------------------------*
FORM DB_UPD_ZVSA06PRO .
*.process data base updates/inserts/deletes.........................*
LOOP AT TOTAL.
  CHECK <ACTION> NE ORIGINAL.
MOVE <VIM_TOTAL_STRUC> TO ZVSA06PRO.
  IF <ACTION> = UPDATE_GELOESCHT.
    <ACTION> = GELOESCHT.
  ENDIF.
  CASE <ACTION>.
   WHEN NEUER_GELOESCHT.
IF STATUS_ZVSA06PRO-ST_DELETE EQ GELOESCHT.
     READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
     IF SY-SUBRC EQ 0.
       DELETE EXTRACT INDEX SY-TABIX.
     ENDIF.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN GELOESCHT.
  SELECT SINGLE FOR UPDATE * FROM ZTSA06PRO WHERE
  PCODE = ZVSA06PRO-PCODE .
    IF SY-SUBRC = 0.
    DELETE ZTSA06PRO .
    ENDIF.
    DELETE FROM ZTSA06PRO_T WHERE
    PCODE = ZTSA06PRO-PCODE .
    IF STATUS-DELETE EQ GELOESCHT.
      READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY> BINARY SEARCH.
      DELETE EXTRACT INDEX SY-TABIX.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN OTHERS.
  SELECT SINGLE FOR UPDATE * FROM ZTSA06PRO WHERE
  PCODE = ZVSA06PRO-PCODE .
    IF SY-SUBRC <> 0.   "insert preprocessing: init WA
      CLEAR ZTSA06PRO.
    ENDIF.
ZTSA06PRO-MANDT =
ZVSA06PRO-MANDT .
ZTSA06PRO-PCODE =
ZVSA06PRO-PCODE .
ZTSA06PRO-PTYPE =
ZVSA06PRO-PTYPE .
ZTSA06PRO-PPRICE =
ZVSA06PRO-PPRICE .
ZTSA06PRO-WAERS =
ZVSA06PRO-WAERS .
ZTSA06PRO-PERNR =
ZVSA06PRO-PERNR .
    IF SY-SUBRC = 0.
    UPDATE ZTSA06PRO ##WARN_OK.
    ELSE.
    INSERT ZTSA06PRO .
    ENDIF.
    SELECT SINGLE FOR UPDATE * FROM ZTSA06PRO_T WHERE
    PCODE = ZTSA06PRO-PCODE AND
    SPRAS = SY-LANGU .
      IF SY-SUBRC <> 0.   "insert preprocessing: init WA
        CLEAR ZTSA06PRO_T.
ZTSA06PRO_T-PCODE =
ZTSA06PRO-PCODE .
ZTSA06PRO_T-SPRAS =
SY-LANGU .
      ENDIF.
ZTSA06PRO_T-PNAME =
ZVSA06PRO-PNAME .
    IF SY-SUBRC = 0.
    UPDATE ZTSA06PRO_T ##WARN_OK.
    ELSE.
    INSERT ZTSA06PRO_T .
    ENDIF.
    READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
    IF SY-SUBRC EQ 0.
      <XACT> = ORIGINAL.
      MODIFY EXTRACT INDEX SY-TABIX.
    ENDIF.
    <ACTION> = ORIGINAL.
    MODIFY TOTAL.
  ENDCASE.
ENDLOOP.
CLEAR: STATUS_ZVSA06PRO-UPD_FLAG,
STATUS_ZVSA06PRO-UPD_CHECKD.
MESSAGE S018(SV).
ENDFORM.
*---------------------------------------------------------------------*
FORM READ_SINGLE_ENTRY_ZVSA06PRO.
  SELECT SINGLE * FROM ZTSA06PRO WHERE
PCODE = ZVSA06PRO-PCODE .
ZVSA06PRO-MANDT =
ZTSA06PRO-MANDT .
ZVSA06PRO-PCODE =
ZTSA06PRO-PCODE .
ZVSA06PRO-PTYPE =
ZTSA06PRO-PTYPE .
ZVSA06PRO-PPRICE =
ZTSA06PRO-PPRICE .
ZVSA06PRO-WAERS =
ZTSA06PRO-WAERS .
ZVSA06PRO-PERNR =
ZTSA06PRO-PERNR .
    SELECT SINGLE * FROM ZTSA06PRO_T WHERE
PCODE = ZTSA06PRO-PCODE AND
SPRAS = SY-LANGU .
    IF SY-SUBRC EQ 0.
ZVSA06PRO-PNAME =
ZTSA06PRO_T-PNAME .
    ELSE.
      CLEAR SY-SUBRC.
      CLEAR ZVSA06PRO-PNAME .
    ENDIF.
ENDFORM.
*---------------------------------------------------------------------*
FORM CORR_MAINT_ZVSA06PRO USING VALUE(CM_ACTION) RC.
  DATA: RETCODE LIKE SY-SUBRC, COUNT TYPE I, TRSP_KEYLEN TYPE SYFLENG.
  FIELD-SYMBOLS: <TAB_KEY_X> TYPE X.
  CLEAR RC.
MOVE ZVSA06PRO-PCODE TO
ZTSA06PRO-PCODE .
MOVE ZVSA06PRO-MANDT TO
ZTSA06PRO-MANDT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = 'ZTSA06PRO'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN ZTSA06PRO TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING 'ZTSA06PRO'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

MOVE ZTSA06PRO-PCODE TO
ZTSA06PRO_T-PCODE .
MOVE SY-LANGU TO
ZTSA06PRO_T-SPRAS .
MOVE ZVSA06PRO-MANDT TO
ZTSA06PRO_T-MANDT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = 'ZTSA06PRO_T'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN ZTSA06PRO_T TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING 'ZTSA06PRO_T'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

ENDFORM.
*---------------------------------------------------------------------*
*...processing: ZVSA06VEN01.....................................*
FORM GET_DATA_ZVSA06VEN01.
  PERFORM VIM_FILL_WHERETAB.
*.read data from database.............................................*
  REFRESH TOTAL.
  CLEAR   TOTAL.
  SELECT * FROM ZTSA06VEN01 WHERE
(VIM_WHERETAB) .
    CLEAR ZVSA06VEN01 .
ZVSA06VEN01-MANDT =
ZTSA06VEN01-MANDT .
ZVSA06VEN01-LIFNR =
ZTSA06VEN01-LIFNR .
ZVSA06VEN01-LAND1 =
ZTSA06VEN01-LAND1 .
ZVSA06VEN01-NAME1 =
ZTSA06VEN01-NAME1 .
ZVSA06VEN01-NAME2 =
ZTSA06VEN01-NAME2 .
ZVSA06VEN01-VENCA =
ZTSA06VEN01-VENCA .
ZVSA06VEN01-CARRID =
ZTSA06VEN01-CARRID .
ZVSA06VEN01-MEALNUMBER =
ZTSA06VEN01-MEALNUMBER .
ZVSA06VEN01-PRICE =
ZTSA06VEN01-PRICE .
ZVSA06VEN01-WAERS =
ZTSA06VEN01-WAERS .
<VIM_TOTAL_STRUC> = ZVSA06VEN01.
    APPEND TOTAL.
  ENDSELECT.
  SORT TOTAL BY <VIM_XTOTAL_KEY>.
  <STATUS>-ALR_SORTED = 'R'.
*.check dynamic selectoptions (not in DDIC)...........................*
  IF X_HEADER-SELECTION NE SPACE.
    PERFORM CHECK_DYNAMIC_SELECT_OPTIONS.
  ELSEIF X_HEADER-DELMDTFLAG NE SPACE.
    PERFORM BUILD_MAINKEY_TAB.
  ENDIF.
  REFRESH EXTRACT.
ENDFORM.
*---------------------------------------------------------------------*
FORM DB_UPD_ZVSA06VEN01 .
*.process data base updates/inserts/deletes.........................*
LOOP AT TOTAL.
  CHECK <ACTION> NE ORIGINAL.
MOVE <VIM_TOTAL_STRUC> TO ZVSA06VEN01.
  IF <ACTION> = UPDATE_GELOESCHT.
    <ACTION> = GELOESCHT.
  ENDIF.
  CASE <ACTION>.
   WHEN NEUER_GELOESCHT.
IF STATUS_ZVSA06VEN01-ST_DELETE EQ GELOESCHT.
     READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
     IF SY-SUBRC EQ 0.
       DELETE EXTRACT INDEX SY-TABIX.
     ENDIF.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN GELOESCHT.
  SELECT SINGLE FOR UPDATE * FROM ZTSA06VEN01 WHERE
  LIFNR = ZVSA06VEN01-LIFNR .
    IF SY-SUBRC = 0.
    DELETE ZTSA06VEN01 .
    ENDIF.
    IF STATUS-DELETE EQ GELOESCHT.
      READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY> BINARY SEARCH.
      DELETE EXTRACT INDEX SY-TABIX.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN OTHERS.
  SELECT SINGLE FOR UPDATE * FROM ZTSA06VEN01 WHERE
  LIFNR = ZVSA06VEN01-LIFNR .
    IF SY-SUBRC <> 0.   "insert preprocessing: init WA
      CLEAR ZTSA06VEN01.
    ENDIF.
ZTSA06VEN01-MANDT =
ZVSA06VEN01-MANDT .
ZTSA06VEN01-LIFNR =
ZVSA06VEN01-LIFNR .
ZTSA06VEN01-LAND1 =
ZVSA06VEN01-LAND1 .
ZTSA06VEN01-NAME1 =
ZVSA06VEN01-NAME1 .
ZTSA06VEN01-NAME2 =
ZVSA06VEN01-NAME2 .
ZTSA06VEN01-VENCA =
ZVSA06VEN01-VENCA .
ZTSA06VEN01-CARRID =
ZVSA06VEN01-CARRID .
ZTSA06VEN01-MEALNUMBER =
ZVSA06VEN01-MEALNUMBER .
ZTSA06VEN01-PRICE =
ZVSA06VEN01-PRICE .
ZTSA06VEN01-WAERS =
ZVSA06VEN01-WAERS .
    IF SY-SUBRC = 0.
    UPDATE ZTSA06VEN01 ##WARN_OK.
    ELSE.
    INSERT ZTSA06VEN01 .
    ENDIF.
    READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
    IF SY-SUBRC EQ 0.
      <XACT> = ORIGINAL.
      MODIFY EXTRACT INDEX SY-TABIX.
    ENDIF.
    <ACTION> = ORIGINAL.
    MODIFY TOTAL.
  ENDCASE.
ENDLOOP.
CLEAR: STATUS_ZVSA06VEN01-UPD_FLAG,
STATUS_ZVSA06VEN01-UPD_CHECKD.
MESSAGE S018(SV).
ENDFORM.
*---------------------------------------------------------------------*
FORM READ_SINGLE_ZVSA06VEN01.
  SELECT SINGLE * FROM ZTSA06VEN01 WHERE
LIFNR = ZVSA06VEN01-LIFNR .
ZVSA06VEN01-MANDT =
ZTSA06VEN01-MANDT .
ZVSA06VEN01-LIFNR =
ZTSA06VEN01-LIFNR .
ZVSA06VEN01-LAND1 =
ZTSA06VEN01-LAND1 .
ZVSA06VEN01-NAME1 =
ZTSA06VEN01-NAME1 .
ZVSA06VEN01-NAME2 =
ZTSA06VEN01-NAME2 .
ZVSA06VEN01-VENCA =
ZTSA06VEN01-VENCA .
ZVSA06VEN01-CARRID =
ZTSA06VEN01-CARRID .
ZVSA06VEN01-MEALNUMBER =
ZTSA06VEN01-MEALNUMBER .
ZVSA06VEN01-PRICE =
ZTSA06VEN01-PRICE .
ZVSA06VEN01-WAERS =
ZTSA06VEN01-WAERS .
ENDFORM.
*---------------------------------------------------------------------*
FORM CORR_MAINT_ZVSA06VEN01 USING VALUE(CM_ACTION) RC.
  DATA: RETCODE LIKE SY-SUBRC, COUNT TYPE I, TRSP_KEYLEN TYPE SYFLENG.
  FIELD-SYMBOLS: <TAB_KEY_X> TYPE X.
  CLEAR RC.
MOVE ZVSA06VEN01-LIFNR TO
ZTSA06VEN01-LIFNR .
MOVE ZVSA06VEN01-MANDT TO
ZTSA06VEN01-MANDT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = 'ZTSA06VEN01'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN ZTSA06VEN01 TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING 'ZTSA06VEN01'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

ENDFORM.
*---------------------------------------------------------------------*
